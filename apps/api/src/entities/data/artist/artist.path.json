{
  "getArtistById": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Get artist by ID",
      "description": "Get artist by ID",
      "operationId": "getArtistById",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to return",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Artist found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getSingleArtist"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  },
  "getFollowedArtists": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Get followed artists",
      "description": "Get followed artists",
      "operationId": "getFollowedArtists",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limit of artists to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "offset",
          "in": "query",
          "description": "Offset of artists to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      ],
      "responses": {
        "200": {
          "description": "Followed artists found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getArtistsResponse"
              }
            }
          }
        }
      }
    }
  },
  "followArtist": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Follow artist",
      "description": "Follow artist",
      "operationId": "followArtist",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to follow",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Artist followed",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getSingleArtist"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        },
        "409": {
          "description": "Artist already followed",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  },
  "unfollowArtist": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Unfollow artist",
      "description": "Unfollow artist",
      "operationId": "unfollowArtist",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to unfollow",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Artist unfollowed",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getSingleArtist"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        },
        "409": {
          "description": "Artist not followed",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  },
  "getArtistAlbums": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Get artist albums",
      "description": "Get artist albums",
      "operationId": "getArtistAlbums",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to return albums for",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limit of albums to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "offset",
          "in": "query",
          "description": "Offset of albums to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      ],
      "responses": {
        "200": {
          "description": "Artist albums found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getArtistAlbumsResponse"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  },
  "getArtistPlaylists": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Get artist playlists",
      "description": "Get artist playlists",
      "operationId": "getArtistPlaylists",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limit of playlists to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "offset",
          "in": "query",
          "description": "Offset of playlists to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      ],
      "responses": {
        "200": {
          "description": "Artist playlists found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getArtistPlaylistsResponse"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  },
  "getArtistRelatedArtists": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Get artist related artists",
      "description": "Get artist related artists",
      "operationId": "getArtistRelatedArtists",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to return related artists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limit of related artists to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "offset",
          "in": "query",
          "description": "Offset of related artists to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      ],
      "responses": {
        "200": {
          "description": "Artist related artists found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getArtistsResponse"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  },
  "getArtistTopTracks": {
    "get": {
      "tags": [
        "Artist"
      ],
      "summary": "Get artist top tracks",
      "description": "Get artist top tracks",
      "operationId": "getArtistTopTracks",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "description": "ID of service to return playlists for",
          "required": true,
          "type": "string"
        },
        {
          "name": "artistId",
          "in": "path",
          "description": "ID of artist to return top tracks for",
          "required": true,
          "type": "string"
        },
        {
          "name": "country",
          "in": "query",
          "description": "Country to return top tracks for",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Limit of top tracks to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100
        },
        {
          "name": "offset",
          "in": "query",
          "description": "Offset of top tracks to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      ],
      "responses": {
        "200": {
          "description": "Artist top tracks found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./artist.components.json#/schemas/getArtistTopTracksResponse"
              }
            }
          }
        },
        "404": {
          "description": "Artist not found",
          "schema": {
            "$ref": "../../openapi.components.json#/schemas/Error"
          }
        }
      }
    }
  }
}
